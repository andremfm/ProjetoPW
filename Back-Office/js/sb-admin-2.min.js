/*!
 * Start Bootstrap - SB Admin 2 v4.1.3 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */

!function (l) { "use strict"; l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) { l("body").toggleClass("sidebar-toggled"), l(".sidebar").toggleClass("toggled"), l(".sidebar").hasClass("toggled") && l(".sidebar .collapse").collapse("hide") }), l(window).resize(function () { l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"), l(window).width() < 480 && !l(".sidebar").hasClass("toggled") && (l("body").addClass("sidebar-toggled"), l(".sidebar").addClass("toggled"), l(".sidebar .collapse").collapse("hide")) }), l("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) { var o; 768 < l(window).width() && (o = (o = e.originalEvent).wheelDelta || -o.detail, this.scrollTop += 30 * (o < 0 ? 1 : -1), e.preventDefault()) }), l(document).on("scroll", function () { 100 < l(this).scrollTop() ? l(".scroll-to-top").fadeIn() : l(".scroll-to-top").fadeOut() }), l(document).on("click", "a.scroll-to-top", function (e) { var o = l(this); l("html, body").stop().animate({ scrollTop: l(o.attr("href")).offset().top }, 1e3, "easeInOutExpo"), e.preventDefault() }) }(jQuery);

//Funcao para guardar o funcionario
function guardarFunc() {
  let funcionario = new Object();
  let a = [];
  if(document.getElementById("Funcao").value === ""){

    alert("Tem de selecionar uma função!")

  } else {
    funcionario.Nome = document.getElementById("FirstName").value;
    funcionario.Apelido = document.getElementById("LastName").value;
    funcionario.DataNasc = document.getElementById("DataNasc").value;
    funcionario.Email = document.getElementById("Email").value;
    funcionario.Telefone = document.getElementById("Telefone").value;
    funcionario.Funcao = document.getElementById("Funcao").value;
    funcionario.Valor = document.getElementById("Valor").value;

    a = JSON.parse(localStorage.getItem("funcionarios")) || [];
    a.push(funcionario);

    localStorage.setItem("funcionarios", JSON.stringify(a));

    alert("Adicionado com sucesso!")
    document.getElementById("formFuncionarios").reset();
  }
  
} 

//Alterar funcionario
function altFunc(index) {
  let funcionario = new Object();
  let a = [];
  if(document.getElementById("Funcao").value === ""){

    alert("Tem de selecionar uma função!")

  } else {
    funcionario.Nome = document.getElementById("FirstName").value;
    funcionario.Apelido = document.getElementById("LastName").value;
    funcionario.DataNasc = document.getElementById("DataNasc").value;
    funcionario.Email = document.getElementById("Email").value;
    funcionario.Telefone = document.getElementById("Telefone").value;
    funcionario.Funcao = document.getElementById("Funcao").value;
    funcionario.Valor = document.getElementById("Valor").value;

    a = JSON.parse(localStorage.getItem("funcionarios")) || [];
    a.splice(index,0,funcionario);
    if (localStorage.getItem("funcionarios") == null) {
      localStorage.setItem("funcionarios", JSON.stringify(a));
    } else {
      localStorage.setItem("funcionarios", JSON.stringify(a));
    }
    /*localStorage.setItem("funcionarios", JSON.stringify(a));*/

    alert("Adicionado com sucesso!")
    document.getElementById("formFuncionarios").reset();
    
  }
} 

//Carregar lista de funcionarios
function loadData() {
    let data = JSON.parse(localStorage.getItem("funcionarios"))
    console.log(data);
    let i = 0;
    let tableData = data.map(funcionario => (
        `
      <tr>
        <td>${funcionario.Funcao}</td>
        <td>${funcionario.Nome} ${funcionario.Apelido}</td>
        <td>${funcionario.DataNasc}</td>
        <td>${funcionario.Email}</td>
        <td>${funcionario.Telefone}</td>
        <td>${funcionario.Valor}€</td>
        <td class="btn btn-info btn-sm" data-toggle="modal" data-target="#func-modal${i}">Alterar</td>
        <td class="btn btn-danger btn-sm delete" onclick="delFunc(${i})">Apagar</td>
      </tr>
      <div class="modal fade" id="func-modal${i}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
      aria-hidden="true">
      <div class="modal-dialog" role="document">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Alterar Funcionário</h5>
                  <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">×</span>
                  </button>
              </div>
              <div class="modal-body">
              <form id="formFuncionarios">
                        <div class="form-group">
                            <select class="form-control" class="form-control form-control-user" id="Funcao">
                                <option selected value="">Função</option>
                                <option value="Reporter">Reporter</option>
                                <option value="Fotógrafo">Fotografo</option>
                                <option value="Cameraman">Cameraman</option>
                            </select>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-6 mb-3 mb-sm-0">
                                <input type="text" class="form-control form-control-user" id="FirstName"
                                    placeholder="Nome">
                            </div>
                            <div class="col-sm-6">
                                <input type="text" class="form-control form-control-user" id="LastName"
                                    placeholder="Apelido">
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="date" class="form-control form-control-user" id="DataNasc"
                                placeholder="Data de Nascimento">
                        </div>
                        <div class="form-group">
                            <input type="email" class="form-control form-control-user" id="Email"
                                placeholder="Email">
                        </div>
                        <div class="form-group">
                            <input type="number" class="form-control form-control-user" id="Telefone"
                                placeholder="Telefone">
                        </div>
                        <div class="form-group">
                            <input type="number" class="form-control form-control-user" id="Valor"
                                placeholder="Valor por Serviço (€)">
                        </div>
                        <div class="form-group row">
                        </div>
                    </form>
              </div>
              <div class="modal-footer">
                  <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancelar</button>
                  <a class="btn btn-info" onclick="altFunc(${i++}) ; window.location.reload()" >Submeter</a>
              </div>
          </div>
      </div>
  </div>
    `

    )).join('');

    console.log(tableData);
    let tbody = document.querySelector('#tbbody');
    tbody.innerHTML = tableData;
    
} 

//Apagar funcionario
function delFunc(index) {
  let data = JSON.parse(localStorage.getItem("funcionarios"))
  data.splice(index, 1);
  if (localStorage.getItem("funcionarios") == null) {
    localStorage.setItem("funcionarios", JSON.stringify(data));
  } else {
    localStorage.setItem("funcionarios", JSON.stringify(data));
  }
  loadData();
}

//Guardar material
function guardarMat() {
  let material = new Object();
  let a = [];

  if(document.getElementById("Tipo").value === ""){

    alert("Tem de selecionar um tipo!")

  } else {

    material.Tipo = document.getElementById("Tipo").value;
    material.Marca = document.getElementById("Marca").value;
    material.Modelo = document.getElementById("Modelo").value;
    material.DataAqui = document.getElementById("DataAqui").value;
    material.Valor = document.getElementById("Valor").value;

    a = JSON.parse(localStorage.getItem("materiais")) || [];
    a.push(material);

    localStorage.setItem("materiais", JSON.stringify(a));

    alert("Adicionado com sucesso!")
    document.getElementById("formMateriais").reset();
  }
} 

//Carregar lista de material
function loadDataMat() {
  let data = JSON.parse(localStorage.getItem("materiais"))
  console.log(data);
  let tableData = data.map(material => (
      `  
    <tr>
      <td>${material.Tipo}</td>
      <td>${material.Marca}</td>
      <td>${material.Modelo}</td>
      <td>${material.DataAqui}</td>
      <td>${material.Valor}€</td>
      <td class="btn btn-info btn-sm">Alterar  </td>
      <td class="btn btn-danger btn-sm delete">Apagar</td>

    </tr>
  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#tbbodymateriais');
  tbody.innerHTML = tableData;

} 

//Despesas material
function despesasMat(){
    let data = JSON.parse(localStorage.getItem("materiais"))
    console.log(data)
    let total = 0
    for (var i=0; i<data.length; i++) {
      total += parseInt(data[i].Valor);
  }
    console.log(total);
    let vdesp = document.querySelector('#valdesp');
  vdesp.innerHTML = total + " €";
}

//Guardar nivel e taxa de risco
function guardarRisco() {
  let risco = new Object();
  let a = [];

    risco.Tipo = document.getElementById("tipodeRisco").value;
    risco.Taxa = document.getElementById("Taxa").value;

    a = JSON.parse(localStorage.getItem("riscos")) || [];
    a.push(risco);

    localStorage.setItem("riscos", JSON.stringify(a));

    alert("Adicionado com sucesso!")
    document.getElementById("formRisco").reset();
} 

//Carregar nivel e taxa de risco
function loadRiscos() {
  let data = JSON.parse(localStorage.getItem("riscos"))
  console.log(data);
  let tableData = data.map(risco => (
      `
    <tr>
      <td>${risco.Tipo}</td>
      <td>${risco.Taxa}€</td>
      <td class="btn btn-info btn-sm">Alterar  </td>
      <td class="btn btn-danger btn-sm delete">Apagar</td>

    </tr>
  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#tbbodyriscos');
  tbody.innerHTML = tableData;

}

//Guardar tipos de servico
function guardarServico() {
  let servico = new Object();
  let a = [];

    servico.Tipo = document.getElementById("tipodeServico").value;
    servico.Taxa = document.getElementById("Taxa").value;

    a = JSON.parse(localStorage.getItem("servico")) || [];
    a.push(servico);

    localStorage.setItem("servico", JSON.stringify(a));

    alert("Adicionado com sucesso!")
    document.getElementById("formservico").reset();
} 

//Carregar tipos de servico
function loadservicos() {
  let data = JSON.parse(localStorage.getItem("servico"))
  console.log(data);
  let tableData = data.map(servico => (
      `
    <tr>
      <td>${servico.Tipo}</td>
      <td>${servico.Taxa}€</td>
      <td class="btn btn-info btn-sm">Alterar  </td>
      <td class="btn btn-danger btn-sm delete">Apagar</td>

    </tr>
  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#tbbodyservico');
  tbody.innerHTML = tableData;

}

//Operacoes1
function loadDataOperacoes() {
  let dataSer = JSON.parse(localStorage.getItem("servico"))
  console.log(dataSer);
  let selectDataSer = dataSer.map(servico => (
    `
    <option value="${servico.Tipo},${servico.Taxa}">${servico.Tipo} (${servico.Taxa}€)</option>
`
)).join('');
let selectSer = document.querySelector('#tipoServico');
selectSer.innerHTML = selectDataSer;

let dataRisco = JSON.parse(localStorage.getItem("riscos"))
  console.log(dataRisco);
  let selectDataRisco = dataRisco.map(risco => (
    `
    <option value="${risco.Tipo},${risco.Taxa}">${risco.Tipo} (${risco.Taxa}€)</option>
`
)).join('');
let selectRisco = document.querySelector('#nivelRisco');
selectRisco.innerHTML = selectDataRisco;
}

//SessionStorage operacoes1
function registarOp(){
  var valueOne = $('#nivelRisco').val().split(',')[0];
  var valueTwo = $('#nivelRisco').val().split(',')[1];

  var tipoServ = $('#tipoServico').val().split(',')[0];
  var taxaServ = $('#tipoServico').val().split(',')[1];

  let e = document.getElementById("evento").value;
  let p = document.getElementById("country").value;

  sessionStorage.setItem("Evento", JSON.stringify(e));
  sessionStorage.setItem("Pais", JSON.stringify(p));
  sessionStorage.setItem("TipoServico", JSON.stringify(tipoServ));
  sessionStorage.setItem("TaxaServico", JSON.stringify(taxaServ));   
  sessionStorage.setItem("TipoRisco", JSON.stringify(valueOne));
  sessionStorage.setItem("TaxaRisco", JSON.stringify(valueTwo));

}

//Operacoes2
function loadDataOp2(){
  let tipoServ = JSON.parse(sessionStorage.getItem("TipoServico"))
  let tipoRisco = JSON.parse(sessionStorage.getItem("TipoRisco"))
  let taxaServ = JSON.parse(sessionStorage.getItem("TaxaServico"))
  let taxaRisco = JSON.parse(sessionStorage.getItem("TaxaRisco"))

  var s = parseFloat(taxaServ);
  var r = parseFloat(taxaRisco);

  let subTotal = s + r;

  let tableData = (
      `
    <tr>
      <td>${tipoServ}: </td>
      <td>${taxaServ}€</td>
    </tr>
    <tr>
      <td>Risco ${tipoRisco}: </td>
      <td>${taxaRisco}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Subtotal: </td>
      <td>${subTotal}€</td>
    </tr>
    <tr>
      <td>IVA(23%): </td>
      <td>${(subTotal*0.23).toFixed(2)}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Total: </td>
      <td>${(subTotal*1.23).toFixed(2)}€</td>
    </tr>
  `
  );
  console.log(tableData);
  let tbody = document.querySelector('#subtotal');
  tbody.innerHTML = tableData;

  loadOp2();
}

function loadOp2(){
  let data = JSON.parse(localStorage.getItem("funcionarios"))
    console.log(data);
  let i = 0;
    let tableData = data.map(funcionario => (

        `
      <tr>
        <td><input type="checkbox" id="checkFunc" name="funcionario" value="${i++}"></td>
        <td>${funcionario.Funcao}</td>
        <td>${funcionario.Nome} ${funcionario.Apelido}</td>
        <td>${funcionario.Valor}€</td>
      </tr>
    `

    )).join('');
    
    console.log(tableData);
    let tbody = document.querySelector('#selecionarFunc');
    tbody.innerHTML = tableData;

    $('input').on('click', function(){
      var selected = [];
      $('input:checked').each(function() {
           selected.push($(this).val());
      });
      
      sessionStorage.setItem("Funcs", JSON.stringify(selected));

      });
        

}

//Operacoes3
function loadDataOp3(){
  let tipoServ = JSON.parse(sessionStorage.getItem("TipoServico"));
  let tipoRisco = JSON.parse(sessionStorage.getItem("TipoRisco"));
  let taxaServ = JSON.parse(sessionStorage.getItem("TaxaServico"));
  let taxaRisco = JSON.parse(sessionStorage.getItem("TaxaRisco"));

  let funcs = JSON.parse(sessionStorage.getItem("Funcs"));
  let x = funcs.length;
  let localFuncs = JSON.parse(localStorage.getItem("funcionarios"));
  let taxaFunc = 0;


  for(var i = 0; i < x; i++){
    const x = funcs[i];
    const funcionario = localFuncs[x];
    var a = parseFloat(funcionario.Valor);

    taxaFunc = taxaFunc + a;
  }

  var s = parseFloat(taxaServ);
  var r = parseFloat(taxaRisco);

  let subTotal = s + r + taxaFunc;

  let tableData = (
      `
    <tr>
      <td>${tipoServ}: </td>
      <td>${taxaServ}€</td>
    </tr>
    <tr>
      <td>Risco ${tipoRisco}: </td>
      <td>${taxaRisco}€</td>
    </tr>
    <tr>
      <td>Funcionários: </td>
      <td>${taxaFunc}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Subtotal: </td>
      <td>${subTotal}€</td>
    </tr>
    <tr>
      <td>IVA(23%): </td>
      <td>${(subTotal*0.23).toFixed(2)}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Total: </td>
      <td>${(subTotal*1.23).toFixed(2)}€</td>
    </tr>
    
  `
  );
  console.log(tableData);
  let tbody = document.querySelector('#subtotal');
  tbody.innerHTML = tableData;

  loadOp3();
}

function loadOp3(){
  let data = JSON.parse(localStorage.getItem("materiais"))
  console.log(data);
  let i = 0;
  let tableData = data.map(material => (
      `
    <tr>
      <td><input type="checkbox" id="checkMat" name="material" value="${i++}"></td>
      <td>${material.Tipo}</td>
      <td>${material.Marca} ${material.Modelo}</td>
      <td>${material.Valor}€</td>
    </tr>
  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#selecionarMat');
  tbody.innerHTML = tableData;

  $('input').on('click', function(){
    var selected = [];
    $('input:checked').each(function() {
         selected.push($(this).val());
    });
    
    sessionStorage.setItem("Materiais", JSON.stringify(selected));

    });
}

//Operacoes4
function loadDataOp4(){
  //Evento e Local
  let evento = JSON.parse(sessionStorage.getItem("Evento"));
  let local = JSON.parse(sessionStorage.getItem("Pais"));

  //Tipo de serviço e risco
  let tipoServ = JSON.parse(sessionStorage.getItem("TipoServico"));
  let tipoRisco = JSON.parse(sessionStorage.getItem("TipoRisco"));
  let taxaServ = JSON.parse(sessionStorage.getItem("TaxaServico"));
  let taxaRisco = JSON.parse(sessionStorage.getItem("TaxaRisco"));

  //Funcionarios
  let funcs = JSON.parse(sessionStorage.getItem("Funcs"));
  let x = funcs.length;
  let localFuncs = JSON.parse(localStorage.getItem("funcionarios"));
  let taxaFunc = 0;

  //Materiais
  let mats = JSON.parse(sessionStorage.getItem("Materiais"));
  let y = mats.length;
  let localMats = JSON.parse(localStorage.getItem("materiais"));
  let taxaMat = 0;

  for(var i = 0; i < x; i++){
    const x = funcs[i];
    const funcionario = localFuncs[x];
    var a = parseFloat(funcionario.Valor);

    taxaFunc = taxaFunc + a;
  }

  for(var i = 0; i < y; i++){
    const y = mats[i];
    const material = localMats[y];
    var a = parseFloat(material.Valor);

    taxaMat = taxaMat + a;
  }

  var s = parseFloat(taxaServ);
  var r = parseFloat(taxaRisco);

  let subTotal = s + r + taxaFunc + taxaMat;

  let titulo = (`
    ${evento}
  `);
  let h1 = document.querySelector('#Evento');
  h1.innerHTML = titulo;

  let pais = (`
  ${local}
  `);
  let h6 = document.querySelector('#Local');
  h6.innerHTML = pais;

  let tableData = (
      `
    <tr>
      <td>${tipoServ}: </td>
      <td>${taxaServ}€</td>
    </tr>
    <tr>
      <td>Risco ${tipoRisco}: </td>
      <td>${taxaRisco}€</td>
    </tr>
    <tr>
      <td>Funcionários: </td>
      <td>${taxaFunc}€</td>
    </tr>
    <tr>
      <td>Material: </td>
      <td>${taxaMat}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Subtotal: </td>
      <td>${subTotal}€</td>
    </tr>
    <tr>
      <td>IVA(23%): </td>
      <td>${(subTotal*0.23).toFixed(2)}€</td>
    </tr>
    <tr>
      <td class="font-weight-bold">Total: </td>
      <td>${(subTotal*1.23).toFixed(2)}€</td>
    </tr>
    
  `
  );
  console.log(tableData);
  let tbody = document.querySelector('#subtotal');
  tbody.innerHTML = tableData;

  sessionStorage.setItem("TaxaMateriais", JSON.stringify(taxaMat));
  sessionStorage.setItem("TaxaFuncs", JSON.stringify(taxaFunc));


}

//Guardar operacao
function guardarOperacao() {
  let operacao = new Object();
  let a = [];
    
    //Descarregar dados do session storage
    operacao.Evento = JSON.parse(sessionStorage.getItem("Evento"));
    operacao.Local = JSON.parse(sessionStorage.getItem("Pais"));
    operacao.TipoServico = JSON.parse(sessionStorage.getItem("TipoServico"));
    operacao.TaxaServico = JSON.parse(sessionStorage.getItem("TaxaServico"));
    operacao.Risco = JSON.parse(sessionStorage.getItem("TipoRisco"));
    operacao.TaxaRisco = JSON.parse(sessionStorage.getItem("TaxaRisco"));
    operacao.taxaFunc = JSON.parse(sessionStorage.getItem("TaxaFuncs"));
    operacao.taxaMat = JSON.parse(sessionStorage.getItem("TaxaMateriais"));
    
    //Descarregar index funcionarios do session storage e buscar dados ao local storage
    let funcs = JSON.parse(sessionStorage.getItem("Funcs"));
    let x = funcs.length;
    let localFuncs = JSON.parse(localStorage.getItem("funcionarios"));
    let f = [];
    for(var i = 0; i < x; i++){
      const x = funcs[i];
      f.push(localFuncs[x]);
    }

    //Descarregar index funcionarios do session storage e buscar dados ao local storage
    let mats = JSON.parse(sessionStorage.getItem("Materiais"));
    let y = mats.length;
    let localMats = JSON.parse(localStorage.getItem("materiais"));
    let m = [];
    for(var i = 0; i < y; i++){
      const y = mats[i];
      m.push(localMats[y]);
    }

    operacao.Funcionarios = f;
    operacao.Materiais = m;

    a = JSON.parse(localStorage.getItem("operacoes")) || [];
    a.push(operacao);

    localStorage.setItem("operacoes", JSON.stringify(a));

    alert("Adicionado com sucesso!")
    sessionStorage.clear();
  
} 

function loadListaOperacoes(){
  let data = JSON.parse(localStorage.getItem("operacoes"))
  console.log(data);
  let i = 0;
  let tableData = data.map(operacao => (
      `  
    <tr>
      <td>${operacao.Evento}</td>
      <td>${operacao.Local}</td>
      <td>${operacao.TipoServico}</td>
      <td>${operacao.Risco}</td>
      <td class="btn btn-info btn-sm" data-toggle="modal" data-target="#func-modal${i}">Detalhes</td>
        <td class="btn btn-danger btn-sm delete"">Apagar</td>
    </tr>
    <div class="modal fade" id="func-modal${i++}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Detalhes Operação</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
              </div>
              <div class="modal-body">
                <h2>${operacao.Evento} - ${operacao.Local}</h2>
                <br>
                <p>Tipo de Serviço: ${operacao.TipoServico} (${operacao.TaxaServico}€)</p>
                <p>Nivel de Risco: ${operacao.Risco} (${operacao.TaxaRisco}€)</p>
                <p>Funcionarios: ${operacao.Funcionarios.length} (${operacao.taxaFunc}€)</p>
                <p>Material: ${operacao.Materiais.length} (${operacao.taxaMat}€)</p>
                <p class="font-weight-bold">SubTotal: (${parseFloat(operacao.TaxaServico) + parseFloat(operacao.TaxaRisco) + parseFloat(operacao.taxaFunc) + parseFloat(operacao.taxaMat)}€)</p>
                <p>IVA (23%): (${(parseFloat(operacao.TaxaServico) + parseFloat(operacao.TaxaRisco) + parseFloat(operacao.taxaFunc) + parseFloat(operacao.taxaMat))*0.23}€)</p>
                <p class="font-weight-bold">Total: (${(parseFloat(operacao.TaxaServico) + parseFloat(operacao.TaxaRisco) + parseFloat(operacao.taxaFunc) + parseFloat(operacao.taxaMat))*1.23}€)</p>
                </div>
          </div>
      </div>
    </div>

  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#tbbodyoperacoes');
  tbody.innerHTML = tableData;
}

function loadDataPedidos() {
  let data = JSON.parse(localStorage.getItem("pedidos"))
  console.log(data);
  let tableData = data.map(pedido => (
      `  
    <tr>
      <td>${pedido.Nome}</td>
      <td>${pedido.Empresa}</td>
      <td>${pedido.Telemóvel}</td>
      <td>${pedido.Email}</td>
      <td>${pedido.TipoDeCobertura}</td>
      <td class="btn btn-info btn-sm" onclick="window.location.href='registarOp.html'">Orçamento  </td>
      <td class="btn btn-danger btn-sm delete">Apagar</td>
    </tr>
  `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#tbbodypedidos');
  tbody.innerHTML = tableData;

} 

function dropdownPedidos(){
  let data = JSON.parse(localStorage.getItem("pedidos"))
  console.log(data);
  let tableData = data.map(pedido => (
     `
     <p>${pedido.Nome} - ${pedido.Empresa}</p>
     `
  )).join('');
  console.log(tableData);
  let tbody = document.querySelector('#centropedidos');
  tbody.innerHTML = tableData;
}

function totalPedidos(){
  let data = JSON.parse(localStorage.getItem("pedidos"))
  console.log(data)

  let vdesp = document.querySelector('#bannerpedidos');
  vdesp.innerHTML = data.length;
}

function indexPage(){
  totalPedidos();
  despesasMat();
}